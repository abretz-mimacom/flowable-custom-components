global:
  security:
    allowInsecureImages: true

flowable:
  ingress:
  # Enable/disbale the ingress configuration for the Helm chart.
    enabled: false

  postgres:
    enabled: true
    image:
      repository: bitnamilegacy/postgresql
      tag: 17.5.0
    primary:
      extraEnvVars:
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "400"
      resources:
        requests:
          cpu: "500m"
          memory: "1Gi"
        limits:
          cpu: "1"
          memory: "2Gi"

  engage:
    enabled: false

  work:
    enabled: true
    contextPath: /flowable-work
    image:
  #    repository: localhost:5001/myflowable
      tag: latest
      # tag: 2025.1.01
    replicas: 1 # multi-node deployment
    resources:
      requests:
        cpu: "100m"
        memory: "1.5Gi"
      limits:
        cpu: "1000m"
        memory: "1.5Gi"
    metrics:
      enabled: true
    javaOpts: "-XX:InitialRAMPercentage=70.0 -XX:MaxRAMPercentage=70.0 -XX:MinRAMPercentage=70.0"
    management:
      enabled: true
    envVariables:
      flowable.inspect.enabled: "true"
      flowable.platform.enable-audit-log: "true"
      management.elastic.metrics.export.enabled: "true"
      flowable.indexing.enabled: "true"
      # Spring Boot 2.6+
      server.forward-headers-strategy: "framework"
      # Optional: trust your cluster subnets if needed for remote IP parsing
      server.tomcat.remoteip.trusted-proxies: "10\\.0\\.0\\.0/8,192\\.168\\.0\\.0/16,172\\.16\\.0\\.0/12"

      # extraVolumes:
      #   - name: additional-classpath
      #     hostPath:
      #       path: /Users/aaron.bretz/.m2/repository/org/flowable/jobapplication/0.0.1-SNAPSHOT/
      #       type: Directory
      # extraVolumeMounts:
      #   - name: additional-classpath
      #     mountPath: /additional-classpath/
      # initContainers:
      #   - name: copy-jar
      #     image: busybox
      #     command: ["sh", "-c", "cp /jars/my-lib.jar /additional-classpath/"]
      #     volumeMounts:
      #       - name: additional-classpath
      #         mountPath: /additonal-classpath
      #       - name: jar-source
      #         mountPath:
      #     volumeMounts:
      #       - name: additional-classpath
      #         mountPath: /additional-classpath/
      # extraImagePullSecrets: flw-docker-auth
    storage:
      provisioner: rancher.io/local-path
      storageClass: standard

  elasticsearch:
    enabled: true
    image:
      repository: bitnamilegacy/elasticsearch
      tag: 8.18.0
    nodeGroup: master
    master:
      resources:
        requests:
          cpu: 1
          memory: 2048Mi
        limits:
          cpu: 1
          memory: 2048Mi

  design:
    enabled: true
    contextPath: /flowable-design
    image:
      tag: latest
      # tag: 2025.1.01
    resources:
      requests:
        cpu: "100m"
        memory: "1.5Gi"
      limits:
        cpu: "1000m"
        memory: "1.5Gi"
    angularVersion: false
    extraContainers:
    # Add a sidecar for flowable components that need to call back to localhost:3011
      - name: socat-tunnel
        image: alpine/socat
        command: ["socat", "TCP-LISTEN:3011,fork,reuseaddr", "TCP:10.244.1.1:3011"]
        ports:
        - containerPort: 3011
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 32Mi
    envVariables:
        flowable.design.model-locking.enabled: true
        flowable.design.model-locking.auto-lock-on-create: true
        flowable.design.form-component-development.enabled: true
        flowable.design.security.access-token.signing-secret: "test-signing-secret-test-signing-secret-test-signing-secret-test-signing-secret"
        # Spring Boot 2.6+
        server.forward-headers-strategy: "framework"
        # Optional: trust your cluster subnets if needed for remote IP parsing
        server.tomcat.remoteip.trusted-proxies: "10\\.0\\.0\\.0/8,192\\.168\\.0\\.0/16,172\\.16\\.0\\.0/12"

  #      application.design.ai.type: openai
  #      spring.ai.openai.api-key: ""
  #      spring.ai.openai.chat.options.temperature: 0.3
  #      spring.ai.openai.chat.options.model: gpt-4o
  #      extraImagePullSecrets: flw-docker-auth
  #      image:
  #       repository: artifacts.flowable.com/docker-local/flowable/flowable-design


  control:
    enabled: true
    contextPath: /flowable-control
    image:
      tag: latest
      # tag: 2025.1.01
    envVariables:
      # Spring Boot 2.6+
      server.forward-headers-strategy: "framework"
      # Optional: trust your cluster subnets if needed for remote IP parsing
      server.tomcat.remoteip.trusted-proxies: "10\\.0\\.0\\.0/8,192\\.168\\.0\\.0/16,172\\.16\\.0\\.0/12"

  flowable:
    dockerAuthSecret: flowable-flowable-regcred

  prometheus:
    enabled: false
    monitoring:
      enabled: true
      global:
        namespace: flowable
